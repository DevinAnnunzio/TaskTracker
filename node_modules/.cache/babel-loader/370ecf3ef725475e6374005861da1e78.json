{"ast":null,"code":"var _jsxFileName = \"/Users/Devin/Desktop/CCImmersive25/ReactTutorials/task-tracker/src/components/Tasks.js\";\nimport React from 'react'; //for state inside of a func, we use useState\n// import { useState } from 'react';\n//create a list using map for the data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = _ref => {\n  let {\n    tasks\n  } = _ref;\n  // //state is immutable, you recreate it and send it down\n  // const[tasks, setTasks] = useState([\n  //     {id: 1, text: \"Doctors appointment\", day:\"February 1\", reminder:true},\n  //     {id: 2, text: \"Food appointment\", day:\"November 1\", reminder:false},\n  //     {id: 3, text: \"Eye appointment\", day:\"March 1\", reminder:true},\n  //     {id: 4, text: \"Gym appointment\", day:\"April 1\", reminder:false}\n  // ])\n  return (\n    /*#__PURE__*/\n    // setTasks([...tasks, {id:4, text: \"Nothing\", day:\"January 1\", reminder: false}])\n    _jsxDEV(_Fragment, {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.text\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }, this))\n    }, void 0, false)\n  );\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/Devin/Desktop/CCImmersive25/ReactTutorials/task-tracker/src/components/Tasks.js"],"names":["React","Tasks","tasks","map","task","text","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;;;;AACA,MAAMC,KAAK,GAAG,QAAa;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AAAA;AACE;AACF;AAAA,gBACCA,KAAK,CAACC,GAAN,CAAWC,IAAD,iBAAW;AAAA,kBAAmBA,IAAI,CAACC;AAAxB,SAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,cAArB;AADD;AAFA;AAMD,CAfD;;KAAML,K;AAiBN,eAAeA,KAAf","sourcesContent":["import React from 'react';\n//for state inside of a func, we use useState\n// import { useState } from 'react';\n//create a list using map for the data\nconst Tasks = ({tasks}) => {\n    // //state is immutable, you recreate it and send it down\n    // const[tasks, setTasks] = useState([\n    //     {id: 1, text: \"Doctors appointment\", day:\"February 1\", reminder:true},\n    //     {id: 2, text: \"Food appointment\", day:\"November 1\", reminder:false},\n    //     {id: 3, text: \"Eye appointment\", day:\"March 1\", reminder:true},\n    //     {id: 4, text: \"Gym appointment\", day:\"April 1\", reminder:false}\n    // ])\n\n  return (\n    // setTasks([...tasks, {id:4, text: \"Nothing\", day:\"January 1\", reminder: false}])\n  <>\n  {tasks.map((task) => (<h3 key={task.id}>{task.text}</h3>) )}\n  </>\n  );\n};\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}