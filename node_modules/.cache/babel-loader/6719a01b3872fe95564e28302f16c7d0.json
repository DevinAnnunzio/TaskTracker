{"ast":null,"code":"var _jsxFileName = \"/Users/Devin/Desktop/CCImmersive25/ReactTutorials/task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport { useState } from 'react';\nimport AddTask from \"./components/AddTask\"; //create a list using map for the data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //state is immutable, you recreate it and send it down\n  //state should be at the top level so we can use in other components\n  //If it is in a lower component, can only be used in the components children\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"Doctors appointment\",\n    day: \"February 1, 10:20 AM\",\n    reminder: true\n  }, {\n    id: 2,\n    text: \"Food appointment\",\n    day: \"November 1, 9:10 AM\",\n    reminder: false\n  }, {\n    id: 3,\n    text: \"Eye appointment\",\n    day: \"March 1, 15:20 PM\",\n    reminder: true\n  }, {\n    id: 4,\n    text: \"Gym appointment\",\n    day: \"April 1, 16:20 PM\",\n    reminder: false\n  }]); //delete a task\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Hello from App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 27\n    }, this) : \"No tasks to show\", /*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n} //rafce for auto fill boiler plate code\n\n\n_s(App, \"17UVmQoySP+yLcybBbUdiRFZPFM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Devin/Desktop/CCImmersive25/ReactTutorials/task-tracker/src/App.js"],"names":["Header","Tasks","useState","AddTask","App","tasks","setTasks","id","text","day","reminder","deleteTask","filter","task","toggleReminder","map","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CACA;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb;AACA;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CACjC;AAAEK,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,qBAAf;AAAsCC,IAAAA,GAAG,EAAE,sBAA3C;AAAmEC,IAAAA,QAAQ,EAAE;AAA7E,GADiC,EAEjC;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,kBAAf;AAAmCC,IAAAA,GAAG,EAAE,qBAAxC;AAA+DC,IAAAA,QAAQ,EAAE;AAAzE,GAFiC,EAGjC;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,iBAAf;AAAkCC,IAAAA,GAAG,EAAE,mBAAvC;AAA4DC,IAAAA,QAAQ,EAAE;AAAtE,GAHiC,EAIjC;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,iBAAf;AAAkCC,IAAAA,GAAG,EAAE,mBAAvC;AAA4DC,IAAAA,QAAQ,EAAE;AAAtE,GAJiC,CAAD,CAAlC,CALa,CAYb;;AACA,QAAMC,UAAU,GAAIJ,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAWA,IAAI,CAACN,EAAL,KAAYA,EAApC,CAAD,CAAR;AACD,GAFD,CAba,CAiBb;;;AACA,QAAMO,cAAc,GAAIP,EAAD,IAAQ;AAC7BD,IAAAA,QAAQ,CAACD,KAAK,CAACU,GAAN,CAAWF,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAZ,GAAiB,EAAC,GAAGM,IAAJ;AAAUH,MAAAA,QAAQ,EAAE,CAACG,IAAI,CAACH;AAA1B,KAAjB,GAAuDG,IAA3E,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,EAGGR,KAAK,CAACW,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAIX,KAAhB;AAAuB,MAAA,QAAQ,EAAIM,UAAnC;AAA+C,MAAA,QAAQ,EAAIG;AAA3D;AAAA;AAAA;AAAA;AAAA,YAAnB,GAAkG,kBAHrG,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CAED;;;GAhCSV,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport { useState } from 'react';\nimport AddTask from \"./components/AddTask\";\n//create a list using map for the data\n\n\nfunction App() {\n\n  //state is immutable, you recreate it and send it down\n  //state should be at the top level so we can use in other components\n  //If it is in a lower component, can only be used in the components children\n  const [tasks, setTasks] = useState([\n    { id: 1, text: \"Doctors appointment\", day: \"February 1, 10:20 AM\", reminder: true },\n    { id: 2, text: \"Food appointment\", day: \"November 1, 9:10 AM\", reminder: false },\n    { id: 3, text: \"Eye appointment\", day: \"March 1, 15:20 PM\", reminder: true },\n    { id: 4, text: \"Gym appointment\", day: \"April 1, 16:20 PM\", reminder: false }\n  ])\n  \n  //delete a task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => (task.id !== id)))\n  }\n\n  //Toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task))\n  }\n\n  return (\n    <div className=\"container\">\n      <Header title=\"Hello from App\" />\n      {/* //pass tasks in as a prop into Tasks component*/}\n      {tasks.length > 0 ? <Tasks tasks = {tasks} onDelete = {deleteTask} onToggle = {toggleReminder}/> : \"No tasks to show\"}\n      <AddTask></AddTask>\n    </div>\n  );\n}\n\n//rafce for auto fill boiler plate code\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}